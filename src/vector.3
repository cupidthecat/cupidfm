.TH CUPID_VECTOR 3 2024-01-22 "Cupid Common Library Documentation"
.SH NAME
Vector \- dynamic array of void pointers with capacity
.SH LIBRARY
Cupid Common Library
.SH SYNOPSIS
.EX
#include <stddef.h>
#include <cupid/vector.h>

struct VectorImpl {
    size_t cap;
    size_t len;
};

typedef struct {
    void **el;
    struct VectorImpl _PRIVATE_dont_access_PRIVATE_;
} Vector;

Vector Vector_new(size_t cap);
void Vector_bye(Vector *v);
void Vector_add(Vector *v, size_t add);
void Vector_set_len_no_free(Vector *v, size_t len);
void Vector_set_len(Vector *v, size_t len);
size_t Vector_len(Vector v);
void Vector_min_cap(Vector *v);
void Vector_sane_cap(Vector *v);
.EE
.SH DESCRIPTION
This header includes an implementation of a dynamic array.
.SS "Vector Vector_new(size_t cap);"
Creates a
.I Vector
with zero capacity and length.
.SS "void Vector_bye(Vector *v);"
.SS "void Vector_add(Vector *v, size_t add);"
.SS "void Vector_set_len_no_free(Vector *v, size_t len);"
.SS "void Vector_set_len(Vector *v, size_t len);"
.SS "size_t Vector_len(Vector v);"
.SS "void Vector_min_cap(Vector *v);"
.SS "void Vector_sane_cap(Vector *v);"



